<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>3.2.3</version>
        <relativePath />
    </parent>

    <groupId>com.example</groupId>
    <artifactId>library-management-system</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <name>library-management-system</name>
    <description>Système de gestion de bibliothèque</description>

    <properties>
        <java.version>17</java.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    </properties>

    <dependencies>
        <!-- Spring Web pour les API REST -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>

        <!-- Spring Data JPA pour la persistance -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>

        <!-- Validation des données -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-validation</artifactId>
        </dependency>

        <!-- Spring Security -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-security</artifactId>
        </dependency>

        <!-- Base de données Postgres pour le développement -->
        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <scope>runtime</scope>
        </dependency>

        <!-- Lombok pour réduire le code boilerplate -->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <optional>true</optional>
        </dependency>

        <!-- Tests -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-test</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <configuration>
                    <excludes>
                        <exclude>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok</artifactId>
                        </exclude>
                    </excludes>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>
<!-- Explications des éléments principaux :

Parent POM : Nous utilisons le parent Spring Boot qui fournit les versions par défaut des
dépendances.

Propriétés :

java.version : Utilisation de Java 17
Encodage UTF-8 pour éviter les problèmes de caractères
Dépendances principales :

spring-boot-starter-web : Pour créer des API REST
spring-boot-starter-data-jpa : Pour la persistance des données
spring-boot-starter-validation : Pour la validation des données
h2 : Base de données en mémoire pour le développement
lombok : Pour réduire le code boilerplate (getters, setters, etc.)
Plugin de build :

Configuration du plugin Spring Boot pour créer un jar exécutable
Configuration spéciale pour Lombok
Cette configuration vous donne une base solide pour développer votre système de gestion de
bibliothèque avec :

Support REST API
Persistance des données
Validation
Tests unitaires
Base de données H2 pour le développement 


y at il une difference entre h2 et postgresql

Oui, il y a plusieurs différences importantes entre H2 et PostgreSQL :

Type de base de données :

H2 : Base de données in-memory ou fichier, idéale pour le développement et les tests
PostgreSQL : Système de gestion de base de données relationnel complet pour la production
Cas d'utilisation :

H2 :
Développement local
Tests automatisés
Applications de démonstration
Redémarrage avec données fraîches à chaque fois
PostgreSQL :
Applications en production
Données persistantes à long terme
Applications avec forte charge
Besoin de fonctionnalités avancées
Fonctionnalités :

H2 :
Fonctionnalités SQL basiques
Configuration simple
Démarre rapidement
PostgreSQL :
Support JSON/JSONB
Indexation avancée
Partitionnement
Extensions nombreuses
Réplication
Meilleure performance pour les grandes données
Pour votre projet de bibliothèque, je recommande :

H2 pour le développement et les tests
PostgreSQL pour la production
Pour utiliser PostgreSQL, il faudrait modifier le pom.xml en remplaçant la dépendance H2 par :


<dependency>
    <groupId>org.postgresql</groupId>
    <artifactId>postgresql</artifactId>
    <scope>runtime</scope>
</dependency>
-->